

Code/Folder Structure:
    Separate the Core Business Logic/ APIs and DB Communication:

      Grouping of apis with /<path-name>

      /movies ---> CRUD on movies
      /users ---> CRUD on users
      /theaters ---> CRUD on theaters
      /booking ---> CRUD on theaters

      reference: 
        https://www.codespeedy.com/create-separate-routes-file-in-node-express-js/

Authentication & Authorization:

  Authentication Flow:
    User Register or Login to a Application:
      1. Write API for register and resgister should create a user in the DB
      2. Write API for login and login should create a new jwt token along with user details and return to FE
      3. So, APIs /register and /login will be public and accessible by public
  
  Authorization Flow:
    Application flow after successfull login:
      1. use the token from the login response
      2. APIs except /login, /register should contain the request header 
         authorization: < jwt-token >
      3. backend will use this token to verify the roles or access or permission of the user in backend


One More Session at 2:00 PM:
  FE:
    Authentication:

    Authorization: